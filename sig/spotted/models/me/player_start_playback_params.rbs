module Spotted
  module Models
    module Me
      type player_start_playback_params =
        {
          device_id: String,
          context_uri: String,
          offset: ::Hash[Symbol, top],
          position_ms: Integer,
          uris: ::Array[String]
        }
        & Spotted::Internal::Type::request_parameters

      class PlayerStartPlaybackParams < Spotted::Internal::Type::BaseModel
        extend Spotted::Internal::Type::RequestParameters::Converter
        include Spotted::Internal::Type::RequestParameters

        attr_reader device_id: String?

        def device_id=: (String) -> String

        attr_reader context_uri: String?

        def context_uri=: (String) -> String

        attr_reader offset: ::Hash[Symbol, top]?

        def offset=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

        attr_reader position_ms: Integer?

        def position_ms=: (Integer) -> Integer

        attr_reader uris: ::Array[String]?

        def uris=: (::Array[String]) -> ::Array[String]

        def initialize: (
          ?device_id: String,
          ?context_uri: String,
          ?offset: ::Hash[Symbol, top],
          ?position_ms: Integer,
          ?uris: ::Array[String],
          ?request_options: Spotted::request_opts
        ) -> void

        def to_hash: -> {
          device_id: String,
          context_uri: String,
          offset: ::Hash[Symbol, top],
          position_ms: Integer,
          uris: ::Array[String],
          request_options: Spotted::RequestOptions
        }
      end
    end
  end
end
