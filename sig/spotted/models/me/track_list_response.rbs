module Spotted
  module Models
    module Me
      type track_list_response = { added_at: Time, track: Spotted::TrackObject }

      class TrackListResponse < Spotted::Internal::Type::BaseModel
        attr_reader added_at: Time?

        def added_at=: (Time) -> Time

        attr_reader track: Spotted::TrackObject?

        def track=: (Spotted::TrackObject) -> Spotted::TrackObject

        def initialize: (?added_at: Time, ?track: Spotted::TrackObject) -> void

        def to_hash: -> { added_at: Time, track: Spotted::TrackObject }
      end
    end
  end
end
