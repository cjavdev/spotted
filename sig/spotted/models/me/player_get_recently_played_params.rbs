module Spotted
  module Models
    module Me
      type player_get_recently_played_params =
        { after: Integer, before: Integer, limit: Integer }
        & Spotted::Internal::Type::request_parameters

      class PlayerGetRecentlyPlayedParams < Spotted::Internal::Type::BaseModel
        extend Spotted::Internal::Type::RequestParameters::Converter
        include Spotted::Internal::Type::RequestParameters

        attr_reader after: Integer?

        def after=: (Integer) -> Integer

        attr_reader before: Integer?

        def before=: (Integer) -> Integer

        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        def initialize: (
          ?after: Integer,
          ?before: Integer,
          ?limit: Integer,
          ?request_options: Spotted::request_opts
        ) -> void

        def to_hash: -> {
          after: Integer,
          before: Integer,
          limit: Integer,
          request_options: Spotted::RequestOptions
        }
      end
    end
  end
end
