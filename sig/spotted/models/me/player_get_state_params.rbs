module Spotted
  module Models
    module Me
      type player_get_state_params =
        { additional_types: String, market: String }
        & Spotted::Internal::Type::request_parameters

      class PlayerGetStateParams < Spotted::Internal::Type::BaseModel
        extend Spotted::Internal::Type::RequestParameters::Converter
        include Spotted::Internal::Type::RequestParameters

        attr_reader additional_types: String?

        def additional_types=: (String) -> String

        attr_reader market: String?

        def market=: (String) -> String

        def initialize: (
          ?additional_types: String,
          ?market: String,
          ?request_options: Spotted::request_opts
        ) -> void

        def to_hash: -> {
          additional_types: String,
          market: String,
          request_options: Spotted::RequestOptions
        }
      end
    end
  end
end
