module Spotted
  module Models
    module Me
      type top_list_top_tracks_params =
        { limit: Integer, offset: Integer, time_range: String }
        & Spotted::Internal::Type::request_parameters

      class TopListTopTracksParams < Spotted::Internal::Type::BaseModel
        extend Spotted::Internal::Type::RequestParameters::Converter
        include Spotted::Internal::Type::RequestParameters

        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        attr_reader offset: Integer?

        def offset=: (Integer) -> Integer

        attr_reader time_range: String?

        def time_range=: (String) -> String

        def initialize: (
          ?limit: Integer,
          ?offset: Integer,
          ?time_range: String,
          ?request_options: Spotted::request_opts
        ) -> void

        def to_hash: -> {
          limit: Integer,
          offset: Integer,
          time_range: String,
          request_options: Spotted::RequestOptions
        }
      end
    end
  end
end
