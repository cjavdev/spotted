module Spotted
  module Models
    module Me
      type show_list_response = { added_at: Time, show: Spotted::ShowBase }

      class ShowListResponse < Spotted::Internal::Type::BaseModel
        attr_reader added_at: Time?

        def added_at=: (Time) -> Time

        attr_reader show: Spotted::ShowBase?

        def show=: (Spotted::ShowBase) -> Spotted::ShowBase

        def initialize: (?added_at: Time, ?show: Spotted::ShowBase) -> void

        def to_hash: -> { added_at: Time, show: Spotted::ShowBase }
      end
    end
  end
end
