module Spotted
  module Models
    module Me
      type context_object =
        {
          external_urls: Spotted::ExternalURLObject,
          href: String,
          type: String,
          uri: String
        }

      class ContextObject < Spotted::Internal::Type::BaseModel
        attr_reader external_urls: Spotted::ExternalURLObject?

        def external_urls=: (
          Spotted::ExternalURLObject
        ) -> Spotted::ExternalURLObject

        attr_reader href: String?

        def href=: (String) -> String

        attr_reader type: String?

        def type=: (String) -> String

        attr_reader uri: String?

        def uri=: (String) -> String

        def initialize: (
          ?external_urls: Spotted::ExternalURLObject,
          ?href: String,
          ?type: String,
          ?uri: String
        ) -> void

        def to_hash: -> {
          external_urls: Spotted::ExternalURLObject,
          href: String,
          type: String,
          uri: String
        }
      end
    end
  end
end
