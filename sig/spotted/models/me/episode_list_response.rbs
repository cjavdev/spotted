module Spotted
  module Models
    module Me
      type episode_list_response =
        { added_at: Time, episode: Spotted::EpisodeObject }

      class EpisodeListResponse < Spotted::Internal::Type::BaseModel
        attr_reader added_at: Time?

        def added_at=: (Time) -> Time

        attr_reader episode: Spotted::EpisodeObject?

        def episode=: (Spotted::EpisodeObject) -> Spotted::EpisodeObject

        def initialize: (
          ?added_at: Time,
          ?episode: Spotted::EpisodeObject
        ) -> void

        def to_hash: -> { added_at: Time, episode: Spotted::EpisodeObject }
      end
    end
  end
end
