module Spotted
  module Models
    type show_list_episodes_params =
      { limit: Integer, market: String, offset: Integer }
      & Spotted::Internal::Type::request_parameters

    class ShowListEpisodesParams < Spotted::Internal::Type::BaseModel
      extend Spotted::Internal::Type::RequestParameters::Converter
      include Spotted::Internal::Type::RequestParameters

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader market: String?

      def market=: (String) -> String

      attr_reader offset: Integer?

      def offset=: (Integer) -> Integer

      def initialize: (
        ?limit: Integer,
        ?market: String,
        ?offset: Integer,
        ?request_options: Spotted::request_opts
      ) -> void

      def to_hash: -> {
        limit: Integer,
        market: String,
        offset: Integer,
        request_options: Spotted::RequestOptions
      }
    end
  end
end
