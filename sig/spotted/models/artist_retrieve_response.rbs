module Spotted
  module Models
    type artist_retrieve_response =
      {
        id: String,
        external_urls: Spotted::Models::ArtistRetrieveResponse::ExternalURLs,
        followers: Spotted::Models::ArtistRetrieveResponse::Followers,
        genres: ::Array[String],
        href: String,
        images: ::Array[Spotted::Models::ArtistRetrieveResponse::Image],
        name: String,
        popularity: Integer,
        type: Spotted::Models::ArtistRetrieveResponse::type_,
        uri: String
      }

    class ArtistRetrieveResponse < Spotted::Internal::Type::BaseModel
      attr_reader id: String?

      def id=: (String) -> String

      attr_reader external_urls: Spotted::Models::ArtistRetrieveResponse::ExternalURLs?

      def external_urls=: (
        Spotted::Models::ArtistRetrieveResponse::ExternalURLs
      ) -> Spotted::Models::ArtistRetrieveResponse::ExternalURLs

      attr_reader followers: Spotted::Models::ArtistRetrieveResponse::Followers?

      def followers=: (
        Spotted::Models::ArtistRetrieveResponse::Followers
      ) -> Spotted::Models::ArtistRetrieveResponse::Followers

      attr_reader genres: ::Array[String]?

      def genres=: (::Array[String]) -> ::Array[String]

      attr_reader href: String?

      def href=: (String) -> String

      attr_reader images: ::Array[Spotted::Models::ArtistRetrieveResponse::Image]?

      def images=: (
        ::Array[Spotted::Models::ArtistRetrieveResponse::Image]
      ) -> ::Array[Spotted::Models::ArtistRetrieveResponse::Image]

      attr_reader name: String?

      def name=: (String) -> String

      attr_reader popularity: Integer?

      def popularity=: (Integer) -> Integer

      attr_reader type: Spotted::Models::ArtistRetrieveResponse::type_?

      def type=: (
        Spotted::Models::ArtistRetrieveResponse::type_
      ) -> Spotted::Models::ArtistRetrieveResponse::type_

      attr_reader uri: String?

      def uri=: (String) -> String

      def initialize: (
        ?id: String,
        ?external_urls: Spotted::Models::ArtistRetrieveResponse::ExternalURLs,
        ?followers: Spotted::Models::ArtistRetrieveResponse::Followers,
        ?genres: ::Array[String],
        ?href: String,
        ?images: ::Array[Spotted::Models::ArtistRetrieveResponse::Image],
        ?name: String,
        ?popularity: Integer,
        ?type: Spotted::Models::ArtistRetrieveResponse::type_,
        ?uri: String
      ) -> void

      def to_hash: -> {
        id: String,
        external_urls: Spotted::Models::ArtistRetrieveResponse::ExternalURLs,
        followers: Spotted::Models::ArtistRetrieveResponse::Followers,
        genres: ::Array[String],
        href: String,
        images: ::Array[Spotted::Models::ArtistRetrieveResponse::Image],
        name: String,
        popularity: Integer,
        type: Spotted::Models::ArtistRetrieveResponse::type_,
        uri: String
      }

      type external_urls = { spotify: String }

      class ExternalURLs < Spotted::Internal::Type::BaseModel
        attr_reader spotify: String?

        def spotify=: (String) -> String

        def initialize: (?spotify: String) -> void

        def to_hash: -> { spotify: String }
      end

      type followers = { href: String?, total: Integer }

      class Followers < Spotted::Internal::Type::BaseModel
        attr_accessor href: String?

        attr_reader total: Integer?

        def total=: (Integer) -> Integer

        def initialize: (?href: String?, ?total: Integer) -> void

        def to_hash: -> { href: String?, total: Integer }
      end

      type image = { height: Integer?, url: String, width: Integer? }

      class Image < Spotted::Internal::Type::BaseModel
        attr_accessor height: Integer?

        attr_accessor url: String

        attr_accessor width: Integer?

        def initialize: (height: Integer?, url: String, width: Integer?) -> void

        def to_hash: -> { height: Integer?, url: String, width: Integer? }
      end

      type type_ = :artist

      module Type
        extend Spotted::Internal::Type::Enum

        ARTIST: :artist

        def self?.values: -> ::Array[Spotted::Models::ArtistRetrieveResponse::type_]
      end
    end
  end
end
