module Spotted
  module Models
    module Playlists
      type track_list_params =
        {
          additional_types: String,
          fields: String,
          limit: Integer,
          market: String,
          offset: Integer
        }
        & Spotted::Internal::Type::request_parameters

      class TrackListParams < Spotted::Internal::Type::BaseModel
        extend Spotted::Internal::Type::RequestParameters::Converter
        include Spotted::Internal::Type::RequestParameters

        attr_reader additional_types: String?

        def additional_types=: (String) -> String

        attr_reader fields: String?

        def fields=: (String) -> String

        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        attr_reader market: String?

        def market=: (String) -> String

        attr_reader offset: Integer?

        def offset=: (Integer) -> Integer

        def initialize: (
          ?additional_types: String,
          ?fields: String,
          ?limit: Integer,
          ?market: String,
          ?offset: Integer,
          ?request_options: Spotted::request_opts
        ) -> void

        def to_hash: -> {
          additional_types: String,
          fields: String,
          limit: Integer,
          market: String,
          offset: Integer,
          request_options: Spotted::RequestOptions
        }
      end
    end
  end
end
