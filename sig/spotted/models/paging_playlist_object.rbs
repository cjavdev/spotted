module Spotted
  module Models
    type paging_playlist_object =
      {
        href: String,
        items: ::Array[Spotted::SimplifiedPlaylistObject],
        limit: Integer,
        next_: String?,
        offset: Integer,
        previous: String?,
        total: Integer
      }

    class PagingPlaylistObject < Spotted::Internal::Type::BaseModel
      attr_accessor href: String

      attr_accessor items: ::Array[Spotted::SimplifiedPlaylistObject]

      attr_accessor limit: Integer

      attr_accessor next_: String?

      attr_accessor offset: Integer

      attr_accessor previous: String?

      attr_accessor total: Integer

      def initialize: (
        href: String,
        items: ::Array[Spotted::SimplifiedPlaylistObject],
        limit: Integer,
        next_: String?,
        offset: Integer,
        previous: String?,
        total: Integer
      ) -> void

      def to_hash: -> {
        href: String,
        items: ::Array[Spotted::SimplifiedPlaylistObject],
        limit: Integer,
        next_: String?,
        offset: Integer,
        previous: String?,
        total: Integer
      }
    end
  end
end
