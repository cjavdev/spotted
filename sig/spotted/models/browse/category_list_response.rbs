module Spotted
  module Models
    module Browse
      type category_list_response =
        {
          categories: Spotted::Models::Browse::CategoryListResponse::Categories
        }

      class CategoryListResponse < Spotted::Internal::Type::BaseModel
        attr_accessor categories: Spotted::Models::Browse::CategoryListResponse::Categories

        def initialize: (
          categories: Spotted::Models::Browse::CategoryListResponse::Categories
        ) -> void

        def to_hash: -> {
          categories: Spotted::Models::Browse::CategoryListResponse::Categories
        }

        type categories =
          {
            href: String,
            items: ::Array[Spotted::Models::Browse::CategoryListResponse::Categories::Item],
            limit: Integer,
            next_: String?,
            offset: Integer,
            previous: String?,
            total: Integer
          }

        class Categories < Spotted::Internal::Type::BaseModel
          attr_accessor href: String

          attr_accessor items: ::Array[Spotted::Models::Browse::CategoryListResponse::Categories::Item]

          attr_accessor limit: Integer

          attr_accessor next_: String?

          attr_accessor offset: Integer

          attr_accessor previous: String?

          attr_accessor total: Integer

          def initialize: (
            href: String,
            items: ::Array[Spotted::Models::Browse::CategoryListResponse::Categories::Item],
            limit: Integer,
            next_: String?,
            offset: Integer,
            previous: String?,
            total: Integer
          ) -> void

          def to_hash: -> {
            href: String,
            items: ::Array[Spotted::Models::Browse::CategoryListResponse::Categories::Item],
            limit: Integer,
            next_: String?,
            offset: Integer,
            previous: String?,
            total: Integer
          }

          type item =
            {
              id: String,
              href: String,
              icons: ::Array[Spotted::ImageObject],
              name: String
            }

          class Item < Spotted::Internal::Type::BaseModel
            attr_accessor id: String

            attr_accessor href: String

            attr_accessor icons: ::Array[Spotted::ImageObject]

            attr_accessor name: String

            def initialize: (
              id: String,
              href: String,
              icons: ::Array[Spotted::ImageObject],
              name: String
            ) -> void

            def to_hash: -> {
              id: String,
              href: String,
              icons: ::Array[Spotted::ImageObject],
              name: String
            }
          end
        end
      end
    end
  end
end
