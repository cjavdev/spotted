module Spotted
  module Models
    type show_retrieve_response =
      {
        id: String,
        available_markets: ::Array[String],
        copyrights: ::Array[Spotted::CopyrightObject],
        description: String,
        episodes: Spotted::Models::ShowRetrieveResponse::Episodes,
        explicit: bool,
        external_urls: Spotted::ExternalURLObject,
        href: String,
        html_description: String,
        images: ::Array[Spotted::ImageObject],
        is_externally_hosted: bool,
        languages: ::Array[String],
        media_type: String,
        name: String,
        publisher: String,
        total_episodes: Integer,
        type: Spotted::Models::ShowRetrieveResponse::type_,
        uri: String
      }

    class ShowRetrieveResponse < Spotted::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor available_markets: ::Array[String]

      attr_accessor copyrights: ::Array[Spotted::CopyrightObject]

      attr_accessor description: String

      attr_accessor episodes: Spotted::Models::ShowRetrieveResponse::Episodes

      attr_accessor explicit: bool

      attr_accessor external_urls: Spotted::ExternalURLObject

      attr_accessor href: String

      attr_accessor html_description: String

      attr_accessor images: ::Array[Spotted::ImageObject]

      attr_accessor is_externally_hosted: bool

      attr_accessor languages: ::Array[String]

      attr_accessor media_type: String

      attr_accessor name: String

      attr_accessor publisher: String

      attr_accessor total_episodes: Integer

      attr_accessor type: Spotted::Models::ShowRetrieveResponse::type_

      attr_accessor uri: String

      def initialize: (
        id: String,
        available_markets: ::Array[String],
        copyrights: ::Array[Spotted::CopyrightObject],
        description: String,
        episodes: Spotted::Models::ShowRetrieveResponse::Episodes,
        explicit: bool,
        external_urls: Spotted::ExternalURLObject,
        href: String,
        html_description: String,
        images: ::Array[Spotted::ImageObject],
        is_externally_hosted: bool,
        languages: ::Array[String],
        media_type: String,
        name: String,
        publisher: String,
        total_episodes: Integer,
        type: Spotted::Models::ShowRetrieveResponse::type_,
        uri: String
      ) -> void

      def to_hash: -> {
        id: String,
        available_markets: ::Array[String],
        copyrights: ::Array[Spotted::CopyrightObject],
        description: String,
        episodes: Spotted::Models::ShowRetrieveResponse::Episodes,
        explicit: bool,
        external_urls: Spotted::ExternalURLObject,
        href: String,
        html_description: String,
        images: ::Array[Spotted::ImageObject],
        is_externally_hosted: bool,
        languages: ::Array[String],
        media_type: String,
        name: String,
        publisher: String,
        total_episodes: Integer,
        type: Spotted::Models::ShowRetrieveResponse::type_,
        uri: String
      }

      type episodes =
        {
          href: String,
          items: ::Array[Spotted::SimplifiedEpisodeObject],
          limit: Integer,
          next_: String?,
          offset: Integer,
          previous: String?,
          total: Integer
        }

      class Episodes < Spotted::Internal::Type::BaseModel
        attr_accessor href: String

        attr_accessor items: ::Array[Spotted::SimplifiedEpisodeObject]

        attr_accessor limit: Integer

        attr_accessor next_: String?

        attr_accessor offset: Integer

        attr_accessor previous: String?

        attr_accessor total: Integer

        def initialize: (
          href: String,
          items: ::Array[Spotted::SimplifiedEpisodeObject],
          limit: Integer,
          next_: String?,
          offset: Integer,
          previous: String?,
          total: Integer
        ) -> void

        def to_hash: -> {
          href: String,
          items: ::Array[Spotted::SimplifiedEpisodeObject],
          limit: Integer,
          next_: String?,
          offset: Integer,
          previous: String?,
          total: Integer
        }
      end

      type type_ = :show

      module Type
        extend Spotted::Internal::Type::Enum

        SHOW: :show

        def self?.values: -> ::Array[Spotted::Models::ShowRetrieveResponse::type_]
      end
    end
  end
end
