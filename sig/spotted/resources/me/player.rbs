module Spotted
  module Resources
    class Me
      class Player
        attr_reader queue: Spotted::Resources::Me::Player::Queue

        def get_currently_playing: (
          ?additional_types: String,
          ?market: String,
          ?request_options: Spotted::request_opts
        ) -> Spotted::Models::Me::PlayerGetCurrentlyPlayingResponse

        def get_devices: (
          ?request_options: Spotted::request_opts
        ) -> Spotted::Models::Me::PlayerGetDevicesResponse

        def get_state: (
          ?additional_types: String,
          ?market: String,
          ?request_options: Spotted::request_opts
        ) -> Spotted::Models::Me::PlayerGetStateResponse

        def list_recently_played: (
          ?after: Integer,
          ?before: Integer,
          ?limit: Integer,
          ?request_options: Spotted::request_opts
        ) -> Spotted::Internal::CursorURLPage[Spotted::Models::Me::PlayerListRecentlyPlayedResponse]

        def pause_playback: (
          ?device_id: String,
          ?request_options: Spotted::request_opts
        ) -> nil

        def seek_to_position: (
          position_ms: Integer,
          ?device_id: String,
          ?request_options: Spotted::request_opts
        ) -> nil

        def set_repeat_mode: (
          state: String,
          ?device_id: String,
          ?request_options: Spotted::request_opts
        ) -> nil

        def set_volume: (
          volume_percent: Integer,
          ?device_id: String,
          ?request_options: Spotted::request_opts
        ) -> nil

        def skip_next: (
          ?device_id: String,
          ?request_options: Spotted::request_opts
        ) -> nil

        def skip_previous: (
          ?device_id: String,
          ?request_options: Spotted::request_opts
        ) -> nil

        def start_playback: (
          ?device_id: String,
          ?context_uri: String,
          ?offset: ::Hash[Symbol, top],
          ?position_ms: Integer,
          ?uris: ::Array[String],
          ?request_options: Spotted::request_opts
        ) -> nil

        def toggle_shuffle: (
          state: bool,
          ?device_id: String,
          ?request_options: Spotted::request_opts
        ) -> nil

        def transfer: (
          device_ids: ::Array[String],
          ?play: bool,
          ?request_options: Spotted::request_opts
        ) -> nil

        def initialize: (client: Spotted::Client) -> void
      end
    end
  end
end
